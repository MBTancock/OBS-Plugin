
package com.avid.central.obsplugin.inewslibrary.inewssystem;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;



/**
 * 
 *       The INEWSSystem is the service that is used to perform operations against an INEWS database directly.  It is also 
 *       the starting point for all the other iNEWS services.  All operations are performed within the context of a Web 
 *       Session which should be started with the Connect request and completed with the Disconnect request.  Any other 
 *       operations performed without first having established a connection will result in a ConnectionFault.  
 *     
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "INEWSSystem", targetNamespace = "http://avid.com/inewssystem", wsdlLocation = "file:/D:/NetBeans%20Projects/iNEWS/WSDLs/inewssystem.wsdl")
public class INEWSSystem
    extends Service
{

    private final static URL INEWSSYSTEM_WSDL_LOCATION;
    private final static WebServiceException INEWSSYSTEM_EXCEPTION;
    private final static QName INEWSSYSTEM_QNAME = new QName("http://avid.com/inewssystem", "INEWSSystem");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/NetBeans%20Projects/iNEWS/WSDLs/inewssystem.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        INEWSSYSTEM_WSDL_LOCATION = url;
        INEWSSYSTEM_EXCEPTION = e;
    }

    public INEWSSystem() {
        super(__getWsdlLocation(), INEWSSYSTEM_QNAME);
    }

    public INEWSSystem(WebServiceFeature... features) {
        super(__getWsdlLocation(), INEWSSYSTEM_QNAME, features);
    }

    public INEWSSystem(URL wsdlLocation) {
        super(wsdlLocation, INEWSSYSTEM_QNAME);
    }

    public INEWSSystem(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, INEWSSYSTEM_QNAME, features);
    }

    public INEWSSystem(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public INEWSSystem(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns INEWSSystemPortType
     */
    @WebEndpoint(name = "INEWSSystemPort")
    public INEWSSystemPortType getINEWSSystemPort() {
        return super.getPort(new QName("http://avid.com/inewssystem", "INEWSSystemPort"), INEWSSystemPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INEWSSystemPortType
     */
    @WebEndpoint(name = "INEWSSystemPort")
    public INEWSSystemPortType getINEWSSystemPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://avid.com/inewssystem", "INEWSSystemPort"), INEWSSystemPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (INEWSSYSTEM_EXCEPTION!= null) {
            throw INEWSSYSTEM_EXCEPTION;
        }
        return INEWSSYSTEM_WSDL_LOCATION;
    }

}
