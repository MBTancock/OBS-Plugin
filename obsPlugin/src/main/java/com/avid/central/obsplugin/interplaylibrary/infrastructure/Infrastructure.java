
package com.avid.central.obsplugin.interplaylibrary.infrastructure;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * 
 *       The Infrastructure service is a SOAP-based entry point for queries regarding general infrastructure
 *     
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Infrastructure", targetNamespace = "http://avid.com/interplay/ws/infrastructure", wsdlLocation = "http://lookup.wysdom.local/services/Infrastructure?wsdl")
public class Infrastructure
    extends Service
{

    private final static URL INFRASTRUCTURE_WSDL_LOCATION;
    private final static WebServiceException INFRASTRUCTURE_EXCEPTION;
    private final static QName INFRASTRUCTURE_QNAME = new QName("http://avid.com/interplay/ws/infrastructure", "Infrastructure");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://lookup.wysdom.local/services/Infrastructure?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        INFRASTRUCTURE_WSDL_LOCATION = url;
        INFRASTRUCTURE_EXCEPTION = e;
    }

    public Infrastructure() {
        super(__getWsdlLocation(), INFRASTRUCTURE_QNAME);
    }

    public Infrastructure(WebServiceFeature... features) {
        super(__getWsdlLocation(), INFRASTRUCTURE_QNAME, features);
    }

    public Infrastructure(URL wsdlLocation) {
        super(wsdlLocation, INFRASTRUCTURE_QNAME);
    }

    public Infrastructure(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, INFRASTRUCTURE_QNAME, features);
    }

    public Infrastructure(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Infrastructure(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns InfrastructurePortType
     */
    @WebEndpoint(name = "InfrastructurePort")
    public InfrastructurePortType getInfrastructurePort() {
        return super.getPort(new QName("http://avid.com/interplay/ws/infrastructure", "InfrastructurePort"), InfrastructurePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InfrastructurePortType
     */
    @WebEndpoint(name = "InfrastructurePort")
    public InfrastructurePortType getInfrastructurePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://avid.com/interplay/ws/infrastructure", "InfrastructurePort"), InfrastructurePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (INFRASTRUCTURE_EXCEPTION!= null) {
            throw INFRASTRUCTURE_EXCEPTION;
        }
        return INFRASTRUCTURE_WSDL_LOCATION;
    }

}
