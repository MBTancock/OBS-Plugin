
package com.avid.central.obsplugin.inewslibrary.inewsqueue;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * 
 *         The INEWSQueue is the service that is used to perform operations against a particular iNEWS Queue.  Once a
 *         connection has been established to the iNEWS server through the INEWSSystem service's Connect request, a
 *         queue that is to be manipulated through the INEWSQueue service is specified using the SetCurrentQueue request.
 *         All subsequent operations performed through the INEWSQueue service will be performed against that "current queue"
 *         until a new call to the SetCurrentQueue request is made.
 *     
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "INEWSQueue", targetNamespace = "http://avid.com/inewsqueue", wsdlLocation = "http://ftsserver:8080/inewswebservice/services/inewsqueue?wsdl")
public class INEWSQueue
    extends Service
{

    private final static URL INEWSQUEUE_WSDL_LOCATION;
    private final static WebServiceException INEWSQUEUE_EXCEPTION;
    private final static QName INEWSQUEUE_QNAME = new QName("http://avid.com/inewsqueue", "INEWSQueue");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://ftsserver:8080/inewswebservice/services/inewsqueue?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        INEWSQUEUE_WSDL_LOCATION = url;
        INEWSQUEUE_EXCEPTION = e;
    }

    public INEWSQueue() {
        super(__getWsdlLocation(), INEWSQUEUE_QNAME);
    }

    public INEWSQueue(WebServiceFeature... features) {
        super(__getWsdlLocation(), INEWSQUEUE_QNAME, features);
    }

    public INEWSQueue(URL wsdlLocation) {
        super(wsdlLocation, INEWSQUEUE_QNAME);
    }

    public INEWSQueue(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, INEWSQUEUE_QNAME, features);
    }

    public INEWSQueue(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public INEWSQueue(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns INEWSQueuePortType
     */
    @WebEndpoint(name = "INEWSQueuePort")
    public INEWSQueuePortType getINEWSQueuePort() {
        return super.getPort(new QName("http://avid.com/inewsqueue", "INEWSQueuePort"), INEWSQueuePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns INEWSQueuePortType
     */
    @WebEndpoint(name = "INEWSQueuePort")
    public INEWSQueuePortType getINEWSQueuePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://avid.com/inewsqueue", "INEWSQueuePort"), INEWSQueuePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (INEWSQUEUE_EXCEPTION!= null) {
            throw INEWSQUEUE_EXCEPTION;
        }
        return INEWSQUEUE_WSDL_LOCATION;
    }

}
