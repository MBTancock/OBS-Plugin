
package com.avid.central.obsplugin.interplaylibrary.assets;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AssetsPortType", targetNamespace = "http://avid.com/interplay/ws/assets")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AssetsPortType {


    /**
     * 
     *         Get the streaming proxy URL for clips/sequences that have been WAN published.
     * 
     *         Since 2.0
     *         Modified: 2.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetStreamingURLResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetStreamingURL")
    @WebResult(name = "GetStreamingURLResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetStreamingURLResponseType getStreamingURL(
        @WebParam(name = "GetStreamingURL", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetStreamingURLType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets a set of segments for a list of assets.
     * 
     *         Since: 2.5
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetSegmentsFromCompositionResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetSegmentsFromComposition")
    @WebResult(name = "GetSegmentsFromCompositionResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetSegmentsFromCompositionResponseType getSegmentsFromComposition(
        @WebParam(name = "GetSegmentsFromComposition", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetSegmentsFromCompositionType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Adds a reservation to one or more folders.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.AddReservationResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "AddReservation")
    @WebResult(name = "AddReservationResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public AddReservationResponseType addReservation(
        @WebParam(name = "AddReservation", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        AddReservationType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Adds one or more restrictions to an Avid asset.
     * 
     *         Since: 1.4
     *         Modified: 2.3
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.AddRestrictionsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "AddRestrictions")
    @WebResult(name = "AddRestrictionsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public AddRestrictionsResponseType addRestrictions(
        @WebParam(name = "AddRestrictions", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        AddRestrictionsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Adds one or more file mobs to an Avid asset.
     * 
     *         Since: 3.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.AddFileMobsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "AddFileMobs")
    @WebResult(name = "AddFileMobsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public AddFileMobsResponseType addFileMobs(
        @WebParam(name = "AddFileMobs", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        AddFileMobsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Checkin a AMA AAF into IP.
     * 
     *         Since: 3.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CheckInAAFResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CheckInAMAAAF")
    @WebResult(name = "CheckInAMAAAFResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CheckInAAFResponseType checkInAMAAAF(
        @WebParam(name = "CheckInAMAAAF", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CheckInAAFType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Adds or updates a non-Avid asset in the Interplay system.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CheckInResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CheckIn")
    @WebResult(name = "CheckInResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CheckInResponseType checkIn(
        @WebParam(name = "CheckIn", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CheckInType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Adds or updates an Avid AAF asset in the Interplay system.
     * 
     *         Since: 1.0
     *         Modified: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CheckInAAFResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CheckInAAF")
    @WebResult(name = "CheckInAAFResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CheckInAAFResponseType checkInAAF(
        @WebParam(name = "CheckInAAF", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CheckInAAFType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Creates a new folder in the Interplay system.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CreateFolderResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CreateFolder")
    @WebResult(name = "CreateFolderResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CreateFolderResponseType createFolder(
        @WebParam(name = "CreateFolder", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CreateFolderType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Creates new folders in the Interplay system.
     * 
     *         Since: 1.3
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CreateFoldersResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CreateFolders")
    @WebResult(name = "CreateFoldersResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CreateFoldersResponseType createFolders(
        @WebParam(name = "CreateFolders", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CreateFoldersType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Creates a subclip from a masterclip already in Interplay.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CreateSubclipResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CreateSubclip")
    @WebResult(name = "CreateSubclipResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CreateSubclipResponseType createSubclip(
        @WebParam(name = "CreateSubclip", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CreateSubclipType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Deletes one or more assets and/or the media that matches them.
     * 
     *         Since: 1.2
     *         Modified: 2.3
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.DeleteAssetsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "DeleteAssets")
    @WebResult(name = "DeleteAssetsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public DeleteAssetsResponseType deleteAssets(
        @WebParam(name = "DeleteAssets", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        DeleteAssetsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Creates a duplicate of an asset.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.DuplicateResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "Duplicate")
    @WebResult(name = "DuplicateResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public DuplicateResponseType duplicate(
        @WebParam(name = "Duplicate", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        DuplicateType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Finds all links to a specified asset.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.FindLinksResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "FindLinks")
    @WebResult(name = "FindLinksResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public FindLinksResponseType findLinks(
        @WebParam(name = "FindLinks", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        FindLinksType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Finds all relatives for a specified Avid asset.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.FindRelativesResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "FindRelatives")
    @WebResult(name = "FindRelativesResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public FindRelativesResponseType findRelatives(
        @WebParam(name = "FindRelatives", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        FindRelativesType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets a set of attributes for a list of assets.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetAttributesResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetAttributes")
    @WebResult(name = "GetAttributesResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetAttributesResponseType getAttributes(
        @WebParam(name = "GetAttributes", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetAttributesType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets a set of attributes for a list of assets.
     * 
     *         Since: 2.6
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetAttributesInternalResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetAttributesInternal")
    @WebResult(name = "GetAttributesInternalResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetAttributesInternalResponseType getAttributesInternal(
        @WebParam(name = "GetAttributesInternal", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetAttributesInternalType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the configured categories for the system and/or gets the categories for a list
     *         of assets.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetCategoriesResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetCategories")
    @WebResult(name = "GetCategoriesResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetCategoriesResponseType getCategories(
        @WebParam(name = "GetCategories", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetCategoriesType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the child nodes of the passed in location. Optionally includes or excludes files,
     *         folders, or MOBs. An optional name filter (* wildcards are allowed) can restrict the
     *         return set to matching nodes.
     * 
     *         Since: 1.0
     *         Modified: 2.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetChildrenResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetChildren")
    @WebResult(name = "GetChildrenResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetChildrenResponseType getChildren(
        @WebParam(name = "GetChildren", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetChildrenType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Get the source file locations and statuses for one or more assets.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetFileDetailsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetFileDetails")
    @WebResult(name = "GetFileDetailsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetFileDetailsResponseType getFileDetails(
        @WebParam(name = "GetFileDetails", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetFileDetailsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the headframe of an asset in the Interplay system.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetHeadframeResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetHeadframe")
    @WebResult(name = "GetHeadframeResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetHeadframeResponseType getHeadframe(
        @WebParam(name = "GetHeadframe", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetHeadframeType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the latest version of an asset in the Interplay system.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetLatestResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetLatest")
    @WebResult(name = "GetLatestResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetLatestResponseType getLatest(
        @WebParam(name = "GetLatest", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetLatestType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the locators for a given Avid asset.
     * 
     *         WARNING: This operation will be deprecated in a future version of Interplay. Although it will continue
     *         to work withInterplay 1.x and 2.x systems, integrators are advised to use the new UMID Locator
     *         operations and types instead.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetLocatorsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetLocators")
    @WebResult(name = "GetLocatorsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetLocatorsResponseType getLocators(
        @WebParam(name = "GetLocators", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetLocatorsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the UMID-based locators for a given Avid asset.
     * 
     *         Since: 2.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetUMIDLocatorsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetUMIDLocators")
    @WebResult(name = "GetUMIDLocatorsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetUMIDLocatorsResponseType getUMIDLocators(
        @WebParam(name = "GetUMIDLocators", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetLocatorsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the metasync XML that is embedded in a sequence.
     * 
     *         Since: 1.5
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetMetaSyncXMLResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetMetaSyncXML")
    @WebResult(name = "GetMetaSyncXMLResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetMetaSyncXMLResponseType getMetaSyncXML(
        @WebParam(name = "GetMetaSyncXML", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetMetaSyncXMLType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the reservations for one or more folders and/or assets in the Interplay system.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetReservationsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetReservations")
    @WebResult(name = "GetReservationsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetReservationsResponseType getReservations(
        @WebParam(name = "GetReservations", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetReservationsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the resolutions for Avid assets. For use in conjuction with DeleteAssets.
     * 
     *         Since: 1.2
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetResolutionsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetResolutions")
    @WebResult(name = "GetResolutionsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetResolutionsResponseType getResolutions(
        @WebParam(name = "GetResolutions", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetResolutionsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Gets the restrictions for one or more Avid assets.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetRestrictionsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetRestrictions")
    @WebResult(name = "GetRestrictionsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetRestrictionsResponseType getRestrictions(
        @WebParam(name = "GetRestrictions", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetRestrictionsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Creates a new link (or reference) to a MOB in a specified location.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.LinkToMOBResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "LinkToMOB")
    @WebResult(name = "LinkToMOBResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public LinkToMOBResponseType linkToMOB(
        @WebParam(name = "LinkToMOB", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        LinkToMOBType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Modifies the permissions on a folder in Interplay (by user or user group).
     * 
     *         Since: 1.2
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.ModifyFolderACLsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "ModifyFolderACLs")
    @WebResult(name = "ModifyFolderACLsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public ModifyFolderACLsResponseType modifyFolderACLs(
        @WebParam(name = "ModifyFolderACLs", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        ModifyFolderACLsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Moves an asset to a different folder.
     * 
     *         Since: 1.0
     *         Modified: 2.3
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.MoveResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "Move")
    @WebResult(name = "MoveResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public MoveResponseType move(
        @WebParam(name = "Move", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        MoveType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Renames an asset.
     * 
     *         Since: 2.2
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.RenameResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "Rename")
    @WebResult(name = "RenameResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public RenameResponseType rename(
        @WebParam(name = "Rename", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        RenameType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Removes locators from an Avid asset.
     * 
     *         WARNING: This operation will be deprecated in a future version of Interplay. Although it will continue
     *         to work withInterplay 1.x and 2.x systems, integrators are advised to use the new UMID Locator
     *         operations and types instead.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.RemoveLocatorsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "RemoveLocators")
    @WebResult(name = "RemoveLocatorsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public RemoveLocatorsResponseType removeLocators(
        @WebParam(name = "RemoveLocators", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        RemoveLocatorsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Removes UMID locators from an Avid asset.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.RemoveLocatorsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "RemoveUMIDLocators")
    @WebResult(name = "RemoveUMIDLocatorsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public RemoveLocatorsResponseType removeUMIDLocators(
        @WebParam(name = "RemoveUMIDLocators", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        RemoveUMIDLocatorsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Removes reservations from one or more folders.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.RemoveReservationsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "RemoveReservations")
    @WebResult(name = "RemoveReservationsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public RemoveReservationsResponseType removeReservations(
        @WebParam(name = "RemoveReservations", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        RemoveReservationsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Saves a locator. If a locator ID is passed in, and it references an existing locator,
     *         it will update that locator. If no locator ID is passed in, it will add a new locator.
     * 
     *         WARNING: This operation will be deprecated in a future version of Interplay. Although it will continue
     *         to work withInterplay 1.x and 2.x systems, integrators are advised to use the new UMID Locator
     *         operations and types instead.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.SaveLocatorsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "SaveLocators")
    @WebResult(name = "SaveLocatorsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public SaveLocatorsResponseType saveLocators(
        @WebParam(name = "SaveLocators", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        SaveLocatorsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Saves a UMID locator. If a locator URI is passed in, and it references an existing locator,
     *         it will update that locator. If no locator URI is passed in, it will add a new UMID locator.
     * 
     *         Since: 1.1
     *         Modified: 2.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.SaveUMIDLocatorsResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "SaveUMIDLocators")
    @WebResult(name = "SaveUMIDLocatorsResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public SaveUMIDLocatorsResponseType saveUMIDLocators(
        @WebParam(name = "SaveUMIDLocators", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        SaveUMIDLocatorsType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Search for assets.
     * 
     *         Since: 1.0
     *         Modified: 2.2
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.SearchResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "Search")
    @WebResult(name = "SearchResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public SearchResponseType search(
        @WebParam(name = "Search", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        SearchType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Sets custom attributes on a list of assets.
     * 
     *         Since: 1.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.SetAttributesResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "SetAttributes")
    @WebResult(name = "SetAttributesResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public SetAttributesResponseType setAttributes(
        @WebParam(name = "SetAttributes", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        SetAttributesType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Adds and/or removes categories from an asset.
     * 
     *         Since: 1.4
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.SetCategoriesResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "SetCategories")
    @WebResult(name = "SetCategoriesResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public SetCategoriesResponseType setCategories(
        @WebParam(name = "SetCategories", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        SetCategoriesType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Sets a headframe for an Avid asset.
     * 
     *         Since: 1.1
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.SetHeadframeResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "SetHeadframe")
    @WebResult(name = "SetHeadframeResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public SetHeadframeResponseType setHeadframe(
        @WebParam(name = "SetHeadframe", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        SetHeadframeType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Create a simple cuts-only shotlist.
     * 
     *         Since: 2.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CreateShotlistResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CreateShotlist")
    @WebResult(name = "CreateShotlistResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CreateShotlistResponseType createShotlist(
        @WebParam(name = "CreateShotlist", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CreateShotlistType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Create an empty masterclip to be captured later.
     * 
     *         Since: 2.0
     *         Modified: 2.5
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.CreateMasterClipResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "CreateMasterClip")
    @WebResult(name = "CreateMasterClipResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public CreateMasterClipResponseType createMasterClip(
        @WebParam(name = "CreateMasterClip", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        CreateMasterClipType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

    /**
     * 
     *         Retrieve the list of custom attributes for the workgroup.
     * 
     *         Since: JXDK2.0
     *       
     * 
     * @param credentialsHeader
     * @param body
     * @return
     *     returns com.avid.central.obsplugin.interplaylibrary.assets.GetCustomUserAttributesResponseType
     * @throws AssetsFault
     */
    @WebMethod(operationName = "GetCustomUserAttributes")
    @WebResult(name = "GetCustomUserAttributesResponse", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
    public GetCustomUserAttributesResponseType getCustomUserAttributes(
        @WebParam(name = "GetCustomUserAttributes", targetNamespace = "http://avid.com/interplay/ws/assets/types", partName = "body")
        GetCustomUserAttributesType body,
        @WebParam(name = "UserCredentials", targetNamespace = "http://avid.com/interplay/ws/assets/types", header = true, partName = "credentialsHeader")
        UserCredentialsType credentialsHeader)
        throws AssetsFault
    ;

}
