
package com.avid.central.obsplugin.inewslibrary.inewsstory;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "INEWSStoryPortType", targetNamespace = "http://avid.com/inewsstory")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface INEWSStoryPortType {


    /**
     * 
     *         This request acquires an edit lock on the requested story and sets it as the current story against which all other story mutation requests will work.  Any currently
     *         held edit lock will be released.  For example, if you edit lock the FORM area of a story, then request the edit lock for the BODY area of the story,
     *         your edit lock on the FORM will be released before the BODY edit lock is obtained.
     *         
     *         If a connection was not previously established, or the connection to the iNEWS server has been lost a ConnectionFault will be returned.  If an error occurs locking the story, a LockStoryFault will be returned.
     *       
     * 
     * @param body
     * @return
     *     returns inewsstory.LockStoryResponseType
     * @throws LockStoryFault
     * @throws ConnectionFault
     */
    @WebMethod(operationName = "LockStory")
    @WebResult(name = "LockStoryResponse", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
    public LockStoryResponseType lockStory(
        @WebParam(name = "LockStory", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
        LockStoryType body)
        throws ConnectionFault, LockStoryFault
    ;

    /**
     * 
     *         This request saves the current active story and releases its edit lock.  The story will no longer be the active story and a new lock call will need to be made to make it the active story again.
     *         The story object will be returned as part of the response.
     *         
     *         If a connection was not previously established, or the connection to the iNEWS server has been lost a ConnectionFault will be returned.  If an error occurs during the saving of the story, 
     *         a SaveStoryFault will be returned.
     *       
     * 
     * @param body
     * @return
     *     returns inewsstory.SaveStoryResponseType
     * @throws ConnectionFault
     * @throws SaveStoryFault
     */
    @WebMethod(operationName = "SaveStory")
    @WebResult(name = "SaveStoryResponse", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
    public SaveStoryResponseType saveStory(
        @WebParam(name = "SaveStory", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
        SaveStoryType body)
        throws ConnectionFault, SaveStoryFault
    ;

    /**
     * 
     *         This request releases an edit lock that has been acquired by this session on the current story.  If there was not a story
     *         currently locked by this session the unlock request will silently complete (no error will be reported).
     *         
     *         If a connection was not previously established, or the connection to the iNEWS server has been lost a ConnectionFault will be returned.
     *       
     * 
     * @param body
     * @return
     *     returns inewsstory.UnlockStoryResponseType
     * @throws ConnectionFault
     */
    @WebMethod(operationName = "UnlockStory")
    @WebResult(name = "UnlockStoryResponse", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
    public UnlockStoryResponseType unlockStory(
        @WebParam(name = "UnlockStory", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
        UnlockStoryType body)
        throws ConnectionFault
    ;

    /**
     * 
     *         This request deletes the requested story.  
     *         
     *         If a connection was not previously established, or the connection to the iNEWS server has been lost a ConnectionFault will be returned.  
     *         If an error occurs Deleting the story, a DeleteStoryFault will be returned.
     *       
     * 
     * @param body
     * @return
     *     returns inewsstory.DeleteStoryResponseType
     * @throws ConnectionFault
     * @throws DeleteStoryFault
     */
    @WebMethod(operationName = "DeleteStory")
    @WebResult(name = "DeleteStoryResponse", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
    public DeleteStoryResponseType deleteStory(
        @WebParam(name = "DeleteStory", targetNamespace = "http://avid.com/inewsstory/types", partName = "body")
        DeleteStoryType body)
        throws ConnectionFault, DeleteStoryFault
    ;

}
